swagger: '2.0'
info:
  x-ibm-name: getting-started
  version: 1.0.0
  title: getting-started
schemes:
  - https
host: $(catalog.host)
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: 'http://172.21.145.84:31963/$(request.path)$(request.search)'
paths:
  '/ping':
    get:
      tags:
        - Ping
      summary: Test the reachability of the microserver.
      operationId: Ping
      responses:
        '200':
          description: Microservice is alive
      deprecated: false
  '/ready':
    get:
      tags:
        - Ready
      summary: Provides the readiness of the microservice to process requests.
      operationId: Ready
      responses:
        '200':
          description: Request was successful
      deprecated: false
  '/clients':
    post:
      tags:
        - Clients
      summary: Create a new client.
      description: Creates a new client record.
      operationId: Client.create
      parameters:
        - name: data
          in: body
          description: Client instance data
          required: true
          schema:
            description: Model instance data
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              code:
                type: string
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Request
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string
                title: Internal Server Error
        '502':
          description: Bad Gateway
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Gateway
  '/clients/{id}':
    get:
      tags:
        - Clients
      summary: Get a specific client.
      description: Returns the client record.
      parameters:
        - name: id
          in: path
          description: Unique identifier for the identity.
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Client'
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Request
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              message:
                type: string
                title: Internal Server Error
        '502':
          description: Bad Gateway
          schema:
            type: object
            properties:
              message:
                type: string
                title: Bad Gateway
definitions:
  Client:
    properties:
      name:
        description: The name of the client
        type: string
        minLength: 1
        pattern: ^[a-zA-Z0-9\u00C0-\u017F\u0621-\u064A\u0660-\u0669 .,'\"!?:;&]*$
      description:
        description: Short description of the client
        type: string
    required:
      - name
    additionalProperties: false

