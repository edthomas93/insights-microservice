image: docker:latest

variables:
  DOCKER_DRIVER: overlay2
  IMAGE_TRANSIENT: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
  IMAGE_RELEASE: ${CI_REGISTRY_IMAGE}/release:${CI_BUILD_REF_NAME}

stages:
  - install
  - test
  - publish

install:
  stage: install
  image: node:8.10.0
  artifacts:
    paths:
      - node_modules/
    expire_in: 15mins
  script:
    - npm i

unit:
  stage: test
  image: node:8.10.0
  dependencies:
    - install
  script:
    - npm run test:unit

style:
  stage: test
  image: node:8.10.0
  dependencies:
    - install
  script:
    - npm run lint

# publish:
#   image: docker:latest
#   services:
#    - docker:dind
#   stage: publish
#   script:
#     - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${DOCKER_ENV_CI_REGISTRY}
#     - docker build -t ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_NAME} .
#     - docker push ${CI_REGISTRY_IMAGE}:${CI_BUILD_REF_NAME}
#   only:
#     - /^v\d+\.\d+\.\d+$/
#   except:
#     - /^(?!.*(master|v?\d+\.\d+\.\d+)$).*$/

build:
  stage: build
  services:
    - name: docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${DOCKER_ENV_CI_REGISTRY}
    - docker build -t ${IMAGE_TRANSIENT} .
    - docker push ${IMAGE_TRANSIENT}

deploy_dev:
  stage: deploy
  image: spokedev/whale:latest
  services:
    - name: docker:dind
  script:
    - scripts/deploy_dev
  when: manual
  environment:
    name: dev
    on_stop: destroy_dev
  only:
    - /^v\d+\.\d+\.\d+$/
  except:
    - /^(?!.*(master|v?\d+\.\d+\.\d+)$).*$/

destroy_dev:
  stage: deploy
  image: spokedev/whale:latest
  services:
    - name: docker:dind
  script:
    - scripts/destroy_dev
  when: manual
  environment:
    name: dev
    action: stop
  only:
    - /^v\d+\.\d+\.\d+$/
  except:
    - /^(?!.*(master|v?\d+\.\d+\.\d+)$).*$/
